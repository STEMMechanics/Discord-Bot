name: Create Release

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - edited
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Set Release Version'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || startsWith(github.event.pull_request.title, 'Release ')

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Check PR Title Format [Release v1.2.3 (2022-01-01)]
        uses: deepakputhraya/action-pr-title@master
        with:
          regex: '^Release v?([0-9]{1,3})+[.]+([0-9]{1,3})+[.]+([0-9]{1,3})\s\(\d{4}-\d{1,2}-\d{1,2}\)$' # Regex the title should match.
          min_length: 5 # Min length of the title
        if: github.event_name != 'workflow_dispatch'

      - name: Get Version from PR Title
        uses: actions-ecosystem/action-regex-match@v2
        id: version-match
        with:
          text: ${{ github.event.pull_request.title }} # e.g. "Test: AB#16845 try to return PR number"
          regex: '^Release v?([0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}) \([0-9]{4}-[0-9]{2}-[0-9]{2}\)$'
        if: github.event_name != 'workflow_dispatch'

      - name: Get current date
        run: echo "MY_DATE=$(date +%Y-%m-%d)" >> $GITHUB_ENV
        
      - name: Update version
        run: |
          git config user.name $GITHUB_ACTOR
          git config user.email gh-actions-${GITHUB_ACTOR}@github.com
          npm version $VERSION
        env:
          VERSION: ${{ github.event.inputs.release_version }}

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Updated version placeholder

      - name: Update Changelog
        uses: saadmk11/changelog-ci@v1.1.0
        with:
          config_file: changelog-ci-config.json
          release_version: ${{ github.event.inputs.release_version }}

      - name: Create Release
        uses: thomaseizinger/create-release@1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          target_commitish: ${{ github.event.pull_request.merge_commit_sha }}
          tag_name: v${{ steps.version-match.outputs.group1 }}
          name: ${{ steps.version-match.outputs.group1 }}
          draft: false
          prerelease: false
          body: ${{ steps.fc.outputs.comment-body }}
